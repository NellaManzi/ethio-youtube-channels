---
title: Ethiopian YouTube Channels Statistics
author: Eyayaw
date: today
date-format: long
format: 
  html:
    theme: 
     light: flatly
     dark : darkly
execute: 
  warning: false
  message: false
code-fold: true
code-line-numbers: true
code-link: true
code-tools: true
highlight-style: github
link-external-icon: true
link-external-newwindow: true
---

```{r}
#| label: set up
library(data.table)
library(ggplot2)
library(patchwork)
library(ggtext)
```

```{r}
#| label: import data

# pick the latest csv file
file_path = sort(list.files("data", ".csv$", full.names = TRUE), TRUE)[[1]]
# access_time = sub(".*_([0-9 :-]+CET).csv$" , "\\1", file_path) # data access time
access_time = regmatches(
  file_path,
  regexpr("\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2} [A-Z]{3}", file_path)
)
channels_data = fread(file_path, drop = "hiddenSubscriberCount")
num_vars = names(channels_data)[sapply(channels_data, is.numeric)]
channels_data[,  (num_vars) := lapply(.SD, as.integer), .SDcols = (num_vars)]
channels_data[, title := gsub("[ -]*\\p{Ethiopic}+[ -]*", "", title, perl = TRUE)
              ][, viewCountPerVideo := floor(viewCount / videoCount)
                ][, age_in_days := round(Sys.time() - publishedAt)]

# shorten titles
channels_data[, title := fcase(
  title == "Ethio 360 Media", "Ethio 360",
  title %ilike% "Ethio 251 Media", "Ethio 251",
  title == "Feta Daily News", "Feta Daily", 
  title %like% "^EMS", "EMS", 
  title %ilike% "Tigra[iy] Media House", "TMH",
  rep(TRUE, length(title)), title)
]
```


```{r}
#| label:  plot options
fsize = 12
theme_set(theme_light())
fig_width = 18
fig_height = 16
subtitle = sprintf("Data access date: <span style='color:red;'>%s</span>", access_time)
caption_text = "Author: <span style = 'color:#0090e8;'>twitter.com/eyayaw</span><br>Data: accessed via <span style = 'color:red;'>YouTube Data API v3</span>"
```

```{r}
#| label: chart
#| fig-width: !expr fig_width
#| fig-height: !expr fig_height

lookup = list(
  var = c("viewCount", "subscriberCount", "videoCount", "viewCountPerVideo"),
  label = c("#Views", "#Subscribers", "#Videos", "#Views per video"),
  color = c("#8298f8", "#52b439", "#f68060", "#55bdb4"),
  xupper_lim_expand_mult = c(0.01, .01, .01, .01),
  labeller = c(
    scales::label_number(scale = 10^-6),
    replicate(3, scales::label_comma(scale = 1e-3, suffix = "k"))
  )
)

channels_data_long = channels_data |>
  melt(measure.vars = lookup$var, value.name = "count")

ldata = channels_data_long |> split(by = "variable")
subplots = vector("list", length(ldata))
names(subplots) = names(ldata)

for (.var in names(subplots)) {
  # plot aesthetics
  .aes = with(lookup, list(
   fill = color[match(.var, var)],
   ptitle = label[match(.var, var)],
   xupper_lim_expand_mult = xupper_lim_expand_mult[match(.var, var)],
   labeller = labeller[[match(.var, var)]]
 ))

  # plot
  subplots[[.var]] = ldata[[.var]] |> 
    transform(
      title = reorder(title, count), hjust = ifelse(count == max(count), 1, 0)
      ) |> 
    ggplot(aes(count, title)) +
    geom_col(fill = .aes$fill, alpha = 0.75, width = 0.9) +
    geom_label(
      aes(label = prettyNum(count, ","), hjust = hjust), 
      size = .8 * fsize/.pt, nudge_x = -0.5, fill = "white", label.size = 0) +
    scale_x_continuous(
      #expand = expansion(c(0, .aes$xupper_lim_expand_mult)),
      labels = .aes$labeller
    ) +
    labs(title = .aes$ptitle, x = NULL, y = NULL) +
    coord_cartesian(clip = "off") + 
    theme(
      plot.title = element_text(size = fsize, face = "bold", hjust = 0.5),
      axis.text = element_text(size = .9 * fsize),
      panel.grid.major.y = element_blank(),
      panel.grid.minor = element_blank(),
      plot.background = element_rect(fill = "gray99", color = NA)
    )
}


# combine plots ----
panel = wrap_plots(subplots, byrow = TRUE) +
  plot_annotation(
    title = "Stats about Selected Ethiopian YouTube Channels",
    subtitle = subtitle,
    caption = caption_text,
    theme = theme(
      plot.title = element_text(face = "bold", size = 1.5 * fsize),
      plot.subtitle = element_markdown(face = "bold.italic", size = 1.3 * fsize),
      plot.caption = element_markdown(face = "bold.italic", size = .8 * fsize, lineheight = 1.2),
      plot.margin = margin(1, 1, 1, 1, unit = "mm")
    )
  ) 
  

print(panel)

# save figure ----
ggsave(
  sprintf("figs/channels-plot_%s.png", access_time), panel,
  width = fig_width, height = fig_height, dpi = 320
)
```

```{r}
#| eval: false
channels_data_long |> 
 # transform(title=reorder(paste0(variable, "-", title), count)) |> 
 transform(title=reorder(title, count)) |> 
  ggplot(aes(count, title)) +
    geom_col(aes(fill=variable), alpha = 0.6, width = 0.5) +
    geom_text(aes(label = prettyNum(count, ",")), hjust = -0.05) +
    scale_x_continuous(
      labels = scales::label_number(scale = 1e-3, suffix = "k"),
      expand = expansion(c(0, .3))
    ) + 
    # scale_y_discrete(labels=with(channels_data_long, setNames(title, paste0(variable, "-", title)))) + 
    labs(x = "count", y = NULL) +
    facet_wrap(~variable, scales="free") + 
    theme(
      legend.position = "none",
      plot.margin = margin(1, 1, 1, 1, unit = "mm"),
      plot.title = element_text(face = "bold", hjust = 0.5)
    )
  
```

```{r}
#| label: channel-views
channels_data |>
  transform(
    title = reorder(title, viewCount),
    hjust = ifelse(viewCount == max(viewCount), 1, 0)
  ) |>
  ggplot(aes(x = viewCount, y = title)) +
  geom_col(fill = "#52b439", alpha = .6, width = .9) +
  geom_label(
    aes(label = prettyNum(viewCount, big.mark = ","), hjust = hjust),
    size = 10 / .pt, nudge_x = .5, fill = NA, label.size = 0
  ) +
  scale_x_continuous(
    expand = expansion(c(.01, 0.01)),
    labels = scales::label_number(scale = 10^-6)
  ) +
  labs(
    x = expression("#Views"~("in"~10^6)), y = NULL,
    title = "Total number of views, for a few selected Ethiopian YouTube Channels", subtitle = subtitle, caption = caption_text
  ) +
  # coord_cartesian(clip = "off") +
  theme_minimal() +
  theme(
    legend.position = "none",
    axis.text = element_text(size = .9 * fsize),
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    plot.title = element_text(size = fsize, face = "bold"),
    plot.subtitle = element_markdown(size = .9 * fsize, face = "italic"),
    plot.caption = element_markdown(face = "italic", lineheight = 1.2),
    plot.background = element_rect(fill = "gray97", color = NA),
    plot.margin = margin(2, 2, 2, 2, unit = "mm")
  )
```

